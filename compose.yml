name: docker-learn

services:
  frontend: 
    build: 
      context: ./frontend
    ports:
      - 5173:5173
    volumes:
      - ./frontend/public:/frontend/public
      - ./frontend/src:/frontend/src
      - ./frontend/eslint.config.js:/frontend/eslint.config.js
      - ./frontend/index.html:/frontend/index.html
      - ./frontend/package-lock.json:/frontend/package-lock.json
      - ./frontend/package.json:/frontend/package.json
      - ./frontend/tsconfig.app.json:/frontend/tsconfig.app.json
      - ./frontend/tsconfig.json:/frontend/tsconfig.json
      - ./frontend/tsconfig.node.json:/frontend/tsconfig.node.json
      - ./frontend/vite.config.ts:/frontend/vite.config.ts
    env_file:
      - ./frontend/.env
    environment:
      - VITE_USE_POLLING=true

  backend:
    build:
      context: ./backend
    ports:
      - 3000:3000
    volumes:
      - ./backend/src:/backend/src
      - ./backend/docker.env:/backend/.env # not safe? maybe just use dotenv library
    env_file:
      - ./backend/docker.env
    depends_on:
      - postgres
      
  postgres:
    image: postgres:16-bullseye
    # restart: always
    ports:
      - 5433:5432 # Container's port in localhost is 5433
    shm_size: 128mb # set shared memory limit when using docker-compose
    env_file:
      - docker.env
    # environment:
    #   POSTGRES_USER: ${POSTGRES_USER}
    #   POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #   POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - type: bind
        source: ./pgdata
        target: /var/lib/postgresql/data
        bind:
          create_host_path: true

# https://docs.docker.com/compose/how-tos/use-secrets/
# https://docs.docker.com/compose/how-tos/environment-variables/best-practices/